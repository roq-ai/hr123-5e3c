generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model access_rights {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id      String?  @db.Uuid
  access_level Int
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model employee {
  id                     String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                String?  @db.Uuid
  working_hours          Int
  performance_evaluation Int
  created_at             DateTime @default(now()) @db.Timestamp(6)
  updated_at             DateTime @default(now()) @db.Timestamp(6)
  user                   user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id                           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  team_lead_id                 String?  @db.Uuid
  member_id                    String?  @db.Uuid
  created_at                   DateTime @default(now()) @db.Timestamp(6)
  updated_at                   DateTime @default(now()) @db.Timestamp(6)
  user_team_member_idTouser    user?    @relation("team_member_idTouser", fields: [member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_team_team_lead_idTouser user?    @relation("team_team_lead_idTouser", fields: [team_lead_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                           String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                        String          @unique @db.VarChar(255)
  firstName                    String?         @db.VarChar(255)
  lastName                     String?         @db.VarChar(255)
  roq_user_id                  String          @db.VarChar(255)
  tenant_id                    String          @db.VarChar(255)
  created_at                   DateTime        @default(now()) @db.Timestamp(6)
  updated_at                   DateTime        @default(now()) @db.Timestamp(6)
  access_rights                access_rights[]
  employee                     employee[]
  organization                 organization[]
  team_team_member_idTouser    team[]          @relation("team_member_idTouser")
  team_team_team_lead_idTouser team[]          @relation("team_team_lead_idTouser")
}
